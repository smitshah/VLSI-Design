// JK Flip Flop
module jk_ff(j,k,preset,clr,clk,q,qbar);

input j,k;
input preset, clr, clk;
output reg q, qbar;

initial
	begin
		q=0;
		qbar=1;
	end

always @(posedge clk)
case({preset,clr,j,k})
4'b1100: begin q=1; qbar=0; end
4'b0000: begin q=0; qbar=1; end
4'b0100: begin q=q; qbar=qbar; end
4'b0101: begin q=0; qbar=1; end
4'b0110: begin q=1; qbar=0; end
4'b0111: begin q=~q; qbar=~qbar; end
endcase
endmodule





// JK Flip Flop Test Bench
module jk_ff_tb;

	// Inputs
	reg j;
	reg k;
	reg preset;
	reg clr;
	reg clk;

	// Outputs
	wire q;
	wire qbar;

	// Instantiate the Unit Under Test (UUT)
	jk_ff uut (
		.j(j), 
		.k(k), 
		.preset(preset), 
		.clr(clr), 
		.clk(clk), 
		.q(q), 
		.qbar(qbar)
	);
initial begin
		// Initialize Inputs
		
		preset=0;
		clr=0;
		j=0;
		k=0;
		clk=0; 
		
		#100;
		clr=1;
end
	initial forever #10 clk=~clk;
	initial forever #15 j=~j;
	initial forever #20 k=~k;  
endmodule